---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by WGPavell.
--- DateTime: 24.03.2025 18:58
---

FRAMES_TO_HIDE = {'ConsoleBottomBarOverlay', 'CommandBarFrame'}
for i = 0, 11 do
    table.insert(FRAMES_TO_HIDE, "CommandButton_" .. i)
end

FULLSCREEN_CANVAS_SIZE_REFRESH_PERIOD = 0.02
--- @type SimpleEmptyFrame
fullscreenWrapperFrame = nil
--- @type SimpleEmptyFrame
fullscreenCanvasFrame = nil
fullscreenCanvasTimer = CreateTimer()

function GetScreenFrameWidth()
    return BlzGetLocalClientWidth() / BlzGetLocalClientHeight() * 0.6
end

function UpdateFullscreenCanvasSize()
    BlzFrameSetSize(fullscreenCanvasFrame.handle, GetScreenFrameWidth(), 0.6)
end

--- @type TextureFrame
leftSideIconFrame = nil
--- @type SimpleTextFrame
leftSideTextFrame = nil
--- @type SimpleTextFrame
leftSideStatisticsTextFrame = nil
--- @type TextureFrame
rightSideIconFrame = nil
--- @type SimpleTextFrame
rightSideTextFrame = nil
--- @type SimpleTextFrame
rightSideStatisticsTextFrame = nil


SIDE_FRAME_LEFT = 1
SIDE_FRAME_RIGHT = 2

upgradeFrames = {
    [SIDE_FRAME_LEFT] = {
        visible_total = 0,
        frames = {}
    },
    [SIDE_FRAME_RIGHT] = {
        visible_total = 0,
        frames = {}
    }
}


--- @type SimpleEmptyFrame
battleInfoWrapperFrame = nil
--- @type SimpleTextFrame
battleInfoLeftSideTitleFrame = nil
--- @type SimpleTextFrame
battleInfoRightSideTitleFrame = nil
--- @type SimpleTextFrame
battleInfoVersusLabelFrame = nil
--- @type TemplateBackdropFrame
battleWinnerBackdropFrame = nil
--- @type SimpleTextFrame
battleWinnerTextFrame = nil


TOTAL_UNIT_STATISTICS_BACKDROP_PADDING_X = 0.05
TOTAL_UNIT_STATISTICS_BACKDROP_PADDING_Y = 0.05
TOTAL_UNIT_STATISTICS_BACKDROP_HEIGHT = 0.4
--- @type TemplateBackdropFrame
totalUnitStatisticsBackdropFrame = nil

TOTAL_UNIT_STATISTICS_WRAPPER_PADDING_X = 0.025
TOTAL_UNIT_STATISTICS_WRAPPER_PADDING_Y = 0.025
--- @type SimpleEmptyFrame
totalUnitStatisticsWrapperFrame = nil

TOTAL_UNIT_STATISTICS_ICON_FRAME_WIDTH = 0.16
TOTAL_UNIT_STATISTICS_ICON_FRAME_HEIGHT = 0.036
TOTAL_UNIT_STATISTICS_ICON_SPACE_X_MIN = 0.01
TOTAL_UNIT_STATISTICS_ICON_SPACE_Y_MIN = 0.0075
TOTAL_UNIT_STATISTICS_APPEAR_DELAY = 0.1
TOTAL_UNIT_STATISTICS_FADING_IN_DURATION = 1

totalUnitStatisticsBattleListFrames = {}


TOTAL_BATTLES_STATISTICS_BACKDROP_PADDING_X = 0.025
TOTAL_BATTLES_STATISTICS_BACKDROP_PADDING_Y = 0.025
--- @type TemplateBackdropFrame
totalBattlesStatisticsBackdropFrame = nil

TOTAL_BATTLES_STATISTICS_WRAPPER_PADDING_X = 0.025
TOTAL_BATTLES_STATISTICS_WRAPPER_PADDING_Y = 0.025
--- @type SimpleEmptyFrame
totalBattlesStatisticsWrapperFrame = nil

--- @type SimpleEmptyFrame
totalBattlesStatisticsRacesWrapperFrame = nil
TOTAL_BATTLES_STATISTICS_RACE_WRAPPER_SPACE_Y = 0.01
TOTAL_BATTLES_STATISTICS_RACE_TEXT_SCALE = 2.5
TOTAL_BATTLES_STATISTICS_RACE_TEXT_HEIGHT = 0.0092 * TOTAL_BATTLES_STATISTICS_RACE_TEXT_SCALE
TOTAL_BATTLES_STATISTICS_RACE_TEXT_MARGIN_BOTTOM = 0.002 * TOTAL_BATTLES_STATISTICS_RACE_TEXT_SCALE

TOTAL_BATTLES_STATISTICS_ICON_FRAME_WIDTH = 0.12
TOTAL_BATTLES_STATISTICS_ICON_FRAME_HEIGHT = 0.027
TOTAL_BATTLES_STATISTICS_ICON_SPACE_X_MIN = 0.006
TOTAL_BATTLES_STATISTICS_ICON_SPACE_Y_MIN = 0.0075
TOTAL_BATTLES_STATISTICS_ICON_TEXT_BASE_SCALE = 1.8
TOTAL_BATTLES_STATISTICS_APPEAR_DELAY = 0.1
TOTAL_BATTLES_STATISTICS_FADING_IN_DURATION = 1

totalBattlesStatisticsBattleListFrames = {}

--- @type SimpleEmptyFrame
totalBattlesStatisticsTopsWrapperFrame = nil
TOTAL_BATTLES_STATISTICS_TOPS_COLUMN_SPACE_X = 0.02

OnInit.map(function()
    -- Hide all unnecessary frames
    BlzHideOriginFrames(true)
    local framesToHide = {}
    for _, frameName in ipairs(FRAMES_TO_HIDE) do
        table.insert(framesToHide, BlzGetFrameByName(frameName, 0))
    end
    for _, frame in ipairs(framesToHide) do
        BlzFrameSetVisible(frame, false)
    end

    -- Creating fullscreen frame
    local mainFrame = BlzGetFrameByName("ConsoleUIBackdrop", 0)
    fullscreenWrapperFrame = SimpleEmptyFrame:new("FullscreenWrapper", mainFrame)
    fullscreenCanvasFrame = SimpleEmptyFrame:new("FullscreenCanvas", fullscreenWrapperFrame.handle)
    BlzFrameSetVisible(fullscreenCanvasFrame.handle, false)
    UpdateFullscreenCanvasSize()
    TimerStart(fullscreenCanvasTimer, FULLSCREEN_CANVAS_SIZE_REFRESH_PERIOD, true, UpdateFullscreenCanvasSize)
    BlzFrameSetAbsPoint(fullscreenCanvasFrame.handle, FRAMEPOINT_BOTTOM, 0.4, 0)

    leftSideIconFrame = TextureFrame:new("LeftSideIcon", "", fullscreenWrapperFrame.handle)
    leftSideIconFrame.cover:setSize(0.045, 0.045):setRelativePoint(FRAMEPOINT_TOPLEFT, fullscreenCanvasFrame.handle, FRAMEPOINT_TOPLEFT, 0.03, -0.03)
    leftSideTextFrame = SimpleTextFrame:new("LeftSideText", "0", 2, fullscreenWrapperFrame.handle)
    leftSideTextFrame:setRelativePoint(FRAMEPOINT_LEFT, leftSideIconFrame.cover.handle, FRAMEPOINT_RIGHT, 0.003, 0)
    leftSideStatisticsTextFrame = SimpleTextFrame:new("LeftSideStatisticsText", "Всего убито: 0|nВсего умерло: 0", 1.25, fullscreenWrapperFrame.handle)
    leftSideStatisticsTextFrame:setRelativePoint(FRAMEPOINT_LEFT, leftSideTextFrame.handle, FRAMEPOINT_RIGHT, 0.01, 0):setRelativePoint(FRAMEPOINT_TOP, leftSideIconFrame.cover.handle, FRAMEPOINT_TOP, 0, 0):setAlignment(TEXT_JUSTIFY_TOP, TEXT_JUSTIFY_LEFT)

    rightSideIconFrame = TextureFrame:new("RightSideIcon", "", fullscreenWrapperFrame.handle)
    rightSideIconFrame.cover:setSize(0.045, 0.045):setRelativePoint(FRAMEPOINT_TOPRIGHT, fullscreenCanvasFrame.handle, FRAMEPOINT_TOPRIGHT, -0.03, -0.03)
    rightSideTextFrame = SimpleTextFrame:new("RightSideText", "0", 2, fullscreenWrapperFrame.handle)
    rightSideTextFrame:setRelativePoint(FRAMEPOINT_RIGHT, rightSideIconFrame.cover.handle, FRAMEPOINT_LEFT, -0.003, 0)
    rightSideStatisticsTextFrame = SimpleTextFrame:new("RightSideStatisticsText", "Всего убито: 0|nВсего умерло: 0", 1.25, fullscreenWrapperFrame.handle)
    rightSideStatisticsTextFrame:setRelativePoint(FRAMEPOINT_RIGHT, rightSideTextFrame.handle, FRAMEPOINT_LEFT, -0.01, 0):setRelativePoint(FRAMEPOINT_TOP, rightSideIconFrame.cover.handle, FRAMEPOINT_TOP, 0, 0):setAlignment(TEXT_JUSTIFY_TOP, TEXT_JUSTIFY_RIGHT)

    battleInfoWrapperFrame = SimpleTypeFrame:new("BattleInfoWrapper", "SPRITE", fullscreenWrapperFrame.handle, "", 0)
    battleInfoWrapperFrame:setSize(0.3, 0):setRelativePoint(FRAMEPOINT_TOP, fullscreenCanvasFrame.handle, FRAMEPOINT_TOP, 0, 0):setRelativePoint(FRAMEPOINT_BOTTOM, fullscreenCanvasFrame.handle, FRAMEPOINT_BOTTOM, 0, 0)
    battleInfoLeftSideTitleFrame = SimpleTextFrame:new("BattleInfoLeftSideTitle", "", 3, battleInfoWrapperFrame.handle)
    battleInfoLeftSideTitleFrame:setRelativePoint(FRAMEPOINT_TOP, battleInfoWrapperFrame.handle, FRAMEPOINT_TOP, 0, -0.006)
    battleInfoVersusLabelFrame = SimpleTextFrame:new("BattleInfoVersusLabel", "против", 2.6, battleInfoWrapperFrame.handle)
    battleInfoVersusLabelFrame:setRelativePoint(FRAMEPOINT_TOP, battleInfoLeftSideTitleFrame.handle, FRAMEPOINT_BOTTOM, 0, -0.004)
    battleInfoRightSideTitleFrame = SimpleTextFrame:new("BattleInfoRightSideTitle", "", 3, battleInfoWrapperFrame.handle)
    battleInfoRightSideTitleFrame:setRelativePoint(FRAMEPOINT_TOP, battleInfoVersusLabelFrame.handle, FRAMEPOINT_BOTTOM, 0, -0.004)
    battleInfoWrapperFrame:setVisible(false)

    battleWinnerBackdropFrame = TemplateBackdropFrame:new("BattleWinnerBackdrop", "QuestButtonBaseTemplate", fullscreenWrapperFrame.handle)
    battleWinnerTextFrame = SimpleTextFrame:new("BattleWinnerText", "", 4, battleWinnerBackdropFrame.cover.handle)
    battleWinnerTextFrame:setAlignment(TEXT_JUSTIFY_MIDDLE, TEXT_JUSTIFY_CENTER)
    battleWinnerBackdropFrame.cover:setAbsPoint(FRAMEPOINT_CENTER, 0.4, 0.3):setSize(0.4, 0):setVisible(false)
    battleWinnerTextFrame
        :setRelativePoint(FRAMEPOINT_TOP, battleWinnerBackdropFrame.cover.handle, FRAMEPOINT_TOP, 0, -0.1)
        :setRelativePoint(FRAMEPOINT_BOTTOM, battleWinnerBackdropFrame.cover.handle, FRAMEPOINT_BOTTOM, 0, 0.1)
        :setRelativePoint(FRAMEPOINT_LEFT, battleWinnerBackdropFrame.cover.handle, FRAMEPOINT_LEFT, 0.005, 0)
        :setRelativePoint(FRAMEPOINT_RIGHT, battleWinnerBackdropFrame.cover.handle, FRAMEPOINT_RIGHT, -0.005, 0)
        :setVisible(false)

    totalUnitStatisticsBackdropFrame = TemplateBackdropFrame:new("TotalUnitStatisticsBackdrop", "EscMenuBackdrop", fullscreenWrapperFrame.handle)
    totalUnitStatisticsBackdropFrame.cover
        :setRelativePoint(FRAMEPOINT_BOTTOMLEFT, fullscreenCanvasFrame.handle, FRAMEPOINT_BOTTOMLEFT, TOTAL_UNIT_STATISTICS_BACKDROP_PADDING_X, TOTAL_UNIT_STATISTICS_BACKDROP_PADDING_Y)
        :setRelativePoint(FRAMEPOINT_BOTTOMRIGHT, fullscreenCanvasFrame.handle, FRAMEPOINT_BOTTOMRIGHT, -TOTAL_UNIT_STATISTICS_BACKDROP_PADDING_X, TOTAL_UNIT_STATISTICS_BACKDROP_PADDING_Y)
        :setSize(0, TOTAL_UNIT_STATISTICS_BACKDROP_HEIGHT)
        :setVisible(false)
    totalUnitStatisticsWrapperFrame = SimpleEmptyFrame:new("TotalUnitStatisticsWrapper", totalUnitStatisticsBackdropFrame.cover.handle)
    totalUnitStatisticsWrapperFrame
        :setRelativePoint(FRAMEPOINT_TOPLEFT, totalUnitStatisticsBackdropFrame.cover.handle, FRAMEPOINT_TOPLEFT, TOTAL_UNIT_STATISTICS_WRAPPER_PADDING_X, -TOTAL_UNIT_STATISTICS_WRAPPER_PADDING_Y)
        :setRelativePoint(FRAMEPOINT_TOPRIGHT, totalUnitStatisticsBackdropFrame.cover.handle, FRAMEPOINT_TOPRIGHT, -TOTAL_UNIT_STATISTICS_WRAPPER_PADDING_X, -TOTAL_UNIT_STATISTICS_WRAPPER_PADDING_Y)
        :setRelativePoint(FRAMEPOINT_BOTTOM, totalUnitStatisticsBackdropFrame.cover.handle, FRAMEPOINT_BOTTOM, 0, TOTAL_UNIT_STATISTICS_WRAPPER_PADDING_Y)

    totalBattlesStatisticsBackdropFrame = TemplateBackdropFrame:new("TotalBattlesStatisticsBackdrop", "EscMenuBackdrop", fullscreenWrapperFrame.handle)
    totalBattlesStatisticsBackdropFrame.cover
        :setRelativePoint(FRAMEPOINT_BOTTOMLEFT, fullscreenCanvasFrame.handle, FRAMEPOINT_BOTTOMLEFT, TOTAL_BATTLES_STATISTICS_BACKDROP_PADDING_X, TOTAL_BATTLES_STATISTICS_BACKDROP_PADDING_Y)
        :setRelativePoint(FRAMEPOINT_BOTTOMRIGHT, fullscreenCanvasFrame.handle, FRAMEPOINT_BOTTOMRIGHT, -TOTAL_BATTLES_STATISTICS_BACKDROP_PADDING_X, TOTAL_BATTLES_STATISTICS_BACKDROP_PADDING_Y)
        :setRelativePoint(FRAMEPOINT_TOPLEFT, fullscreenCanvasFrame.handle, FRAMEPOINT_TOPLEFT, TOTAL_BATTLES_STATISTICS_BACKDROP_PADDING_X, -TOTAL_BATTLES_STATISTICS_BACKDROP_PADDING_Y)
        :setRelativePoint(FRAMEPOINT_TOPRIGHT, fullscreenCanvasFrame.handle, FRAMEPOINT_TOPRIGHT, -TOTAL_BATTLES_STATISTICS_BACKDROP_PADDING_X, -TOTAL_BATTLES_STATISTICS_BACKDROP_PADDING_Y)
        --:setVisible(false)
    totalBattlesStatisticsWrapperFrame = SimpleEmptyFrame:new("TotalBattlesStatisticsWrapper", totalBattlesStatisticsBackdropFrame.cover.handle)
    totalBattlesStatisticsWrapperFrame
        :setRelativePoint(FRAMEPOINT_TOPLEFT, totalBattlesStatisticsBackdropFrame.cover.handle, FRAMEPOINT_TOPLEFT, TOTAL_BATTLES_STATISTICS_WRAPPER_PADDING_X, -TOTAL_BATTLES_STATISTICS_WRAPPER_PADDING_Y)
        :setRelativePoint(FRAMEPOINT_TOPRIGHT, totalBattlesStatisticsBackdropFrame.cover.handle, FRAMEPOINT_TOPRIGHT, -TOTAL_BATTLES_STATISTICS_WRAPPER_PADDING_X, -TOTAL_BATTLES_STATISTICS_WRAPPER_PADDING_Y)
        :setRelativePoint(FRAMEPOINT_BOTTOM, totalBattlesStatisticsBackdropFrame.cover.handle, FRAMEPOINT_BOTTOM, 0, TOTAL_BATTLES_STATISTICS_WRAPPER_PADDING_Y)

    totalBattlesStatisticsRacesWrapperFrame = SimpleEmptyFrame:new("TotalBattlesStatisticsRacesWrapper", totalBattlesStatisticsWrapperFrame.handle)
    totalBattlesStatisticsRacesWrapperFrame:setAllPoints(totalBattlesStatisticsWrapperFrame.handle):setVisible(false)

    totalBattlesStatisticsTopsWrapperFrame = SimpleEmptyFrame:new("TotalBattlesStatisticsTopsWrapper", totalBattlesStatisticsWrapperFrame.handle)
    totalBattlesStatisticsTopsWrapperFrame:setAllPoints(totalBattlesStatisticsWrapperFrame.handle)
    -- TODO
    for i = 1, 4 do

    end

    BlzFrameClearAllPoints(mainFrame)
end)

function ClearUpgradeFrames()
    for _, sideUpgradeFrames in ipairs(upgradeFrames) do
        ---@param upgradeFrame SimpleTypeFrame
        for _, upgradeFrame in ipairs(sideUpgradeFrames.frames) do
            upgradeFrame:setVisible(false)
        end
        sideUpgradeFrames.visible_total = 0
    end
end

function AppendUpgradeFrame(side)
    local frameIndex = upgradeFrames[side].visible_total + 1
    ---@type UpgradeDataFrame
    local upgradeFrame = upgradeFrames[side].frames[frameIndex]
    if (upgradeFrame == nil) then
        upgradeFrame = UpgradeDataFrame:new("UpgradeFrameContainer", "", "0", 1.25, side == SIDE_FRAME_LEFT and UPGRADE_DATA_FRAME_TEXT_ALIGNMENT_RIGHT or UPGRADE_DATA_FRAME_TEXT_ALIGNMENT_LEFT, fullscreenWrapperFrame.handle, frameIndex - 1)
        upgradeFrame:setSize(0.034, 0.0225)
        upgradeFrames[side].frames[frameIndex] = upgradeFrame
        if frameIndex == 1 then
            upgradeFrame.cover:setRelativePoint(side == SIDE_FRAME_LEFT and FRAMEPOINT_TOPLEFT or FRAMEPOINT_TOPRIGHT, side == SIDE_FRAME_LEFT and leftSideIconFrame.cover.handle or rightSideIconFrame.cover.handle, side == SIDE_FRAME_LEFT and FRAMEPOINT_BOTTOMLEFT or FRAMEPOINT_BOTTOMRIGHT, 0, -0.015)
        elseif (frameIndex - 1) % 4 == 0 then
            upgradeFrame.cover:setRelativePoint(side == SIDE_FRAME_LEFT and FRAMEPOINT_TOPLEFT or FRAMEPOINT_TOPRIGHT, upgradeFrames[side].frames[frameIndex - 4].cover.handle, side == SIDE_FRAME_LEFT and FRAMEPOINT_BOTTOMLEFT or FRAMEPOINT_BOTTOMRIGHT, 0, -0.003)
        else
            upgradeFrame.cover:setRelativePoint(side == SIDE_FRAME_LEFT and FRAMEPOINT_LEFT or FRAMEPOINT_RIGHT, upgradeFrames[side].frames[frameIndex - 1].cover.handle, side == SIDE_FRAME_LEFT and FRAMEPOINT_RIGHT or FRAMEPOINT_LEFT, side == SIDE_FRAME_LEFT and 0.001 or -0.001, 0)
        end
    else
        upgradeFrame:setVisible(true)
    end
    upgradeFrames[side].visible_total = frameIndex
end

function ShowStatisticsFrame(battles, onFinishCallback)
    totalUnitStatisticsBackdropFrame.cover:setAlpha(255):setVisible(true)
    local frameSpaceWidth = GetScreenFrameWidth() - TOTAL_UNIT_STATISTICS_BACKDROP_PADDING_X * 2 - TOTAL_UNIT_STATISTICS_WRAPPER_PADDING_X * 2
    local frameSpaceHeight = TOTAL_UNIT_STATISTICS_BACKDROP_HEIGHT - TOTAL_UNIT_STATISTICS_WRAPPER_PADDING_Y * 2
    local iconFramesPerRow = math.floor((frameSpaceWidth + TOTAL_UNIT_STATISTICS_ICON_SPACE_X_MIN) / (TOTAL_UNIT_STATISTICS_ICON_FRAME_WIDTH + TOTAL_UNIT_STATISTICS_ICON_SPACE_X_MIN))
    local iconFramesPerCol = math.floor((frameSpaceHeight + TOTAL_UNIT_STATISTICS_ICON_SPACE_Y_MIN) / (TOTAL_UNIT_STATISTICS_ICON_FRAME_HEIGHT + TOTAL_UNIT_STATISTICS_ICON_SPACE_Y_MIN))
    local totalIconsWidth = iconFramesPerRow * TOTAL_UNIT_STATISTICS_ICON_FRAME_WIDTH
    local totalIconsHeight = iconFramesPerCol * TOTAL_UNIT_STATISTICS_ICON_FRAME_HEIGHT
    local finalIconFrameHorizontalSpaceBetween = (frameSpaceWidth - totalIconsWidth) / (iconFramesPerRow - 1)
    local finalIconFrameVerticalSpaceBetween = (frameSpaceHeight - totalIconsHeight) / (iconFramesPerCol - 1)
    for i, battle in ipairs(battles) do
        DelayCallback(TOTAL_UNIT_STATISTICS_APPEAR_DELAY * i, function()
            local wrapperFrame
            local iconFrame
            local textFrame
            if totalUnitStatisticsBattleListFrames[i] == nil then
                wrapperFrame = SimpleEmptyFrame:new("TotalUnitStatisticsEntryWrapper", totalUnitStatisticsBackdropFrame.cover.handle, i)
                iconFrame = TextureFrame:new("TotalUnitStatisticsEntryIcon", "", wrapperFrame.handle, i)
                textFrame = SimpleTextFrame:new("TotalUnitStatisticsEntryText", "", 2.25 * (TOTAL_UNIT_STATISTICS_ICON_FRAME_HEIGHT / 0.06), wrapperFrame.handle, i)
                wrapperFrame
                    :setSize(TOTAL_UNIT_STATISTICS_ICON_FRAME_WIDTH, TOTAL_UNIT_STATISTICS_ICON_FRAME_HEIGHT)
                iconFrame.cover
                    :setSize(TOTAL_UNIT_STATISTICS_ICON_FRAME_HEIGHT, TOTAL_UNIT_STATISTICS_ICON_FRAME_HEIGHT)
                    :setRelativePoint(FRAMEPOINT_TOPLEFT, wrapperFrame.handle, FRAMEPOINT_TOPLEFT, 0, 0)
                    :setRelativePoint(FRAMEPOINT_BOTTOMLEFT, wrapperFrame.handle, FRAMEPOINT_BOTTOMLEFT, 0, 0)
                textFrame
                    :setRelativePoint(FRAMEPOINT_TOPLEFT, iconFrame.cover.handle, FRAMEPOINT_TOPRIGHT, 0.003, 0)
                    :setRelativePoint(FRAMEPOINT_BOTTOMLEFT, iconFrame.cover.handle, FRAMEPOINT_BOTTOMLEFT, 0.003, 0)
                    :setRelativePoint(FRAMEPOINT_TOPRIGHT, wrapperFrame.handle, FRAMEPOINT_TOPRIGHT, 0, 0)
                    :setRelativePoint(FRAMEPOINT_BOTTOMRIGHT, wrapperFrame.handle, FRAMEPOINT_BOTTOMRIGHT, 0, 0)
                    :setAlignment(TEXT_JUSTIFY_MIDDLE, TEXT_JUSTIFY_CENTER)
                totalUnitStatisticsBattleListFrames[i] = {
                    wrapper = wrapperFrame,
                    icon = iconFrame,
                    text = textFrame
                }
            else
                wrapperFrame = totalUnitStatisticsBattleListFrames[i].wrapper
                iconFrame = totalUnitStatisticsBattleListFrames[i].icon
                textFrame = totalUnitStatisticsBattleListFrames[i].text
            end
            iconFrame:setTexture(battle.enemy.icon)
            textFrame
                :setText(battle.enemy.name .. "\n" .. (battle.is_winner and "Победа" or "Поражение") .. " (" .. battle.units_left .. ")")
                :setColor(battle.is_winner and 0 or 255, battle.is_winner and 255 or 0, 0)
            if i == 1 then
                wrapperFrame:setRelativePoint(FRAMEPOINT_TOPLEFT, totalUnitStatisticsWrapperFrame.handle, FRAMEPOINT_TOPLEFT, 0, 0)
            elseif (i - 1) % iconFramesPerRow == 0 then
                if (i - 1) / iconFramesPerRow > iconFramesPerCol - 1 then
                    for j = i - (iconFramesPerRow * iconFramesPerCol), i - (iconFramesPerRow * iconFramesPerCol) + iconFramesPerRow - 1 do
                        totalUnitStatisticsBattleListFrames[j].wrapper:setVisible(false):resetPoints()
                    end
                    totalUnitStatisticsBattleListFrames[i - (iconFramesPerRow * iconFramesPerCol) + iconFramesPerRow].wrapper:setRelativePoint(FRAMEPOINT_TOPLEFT, totalUnitStatisticsWrapperFrame.handle, FRAMEPOINT_TOPLEFT, 0, 0)
                end
                wrapperFrame:setRelativePoint(FRAMEPOINT_TOPLEFT, totalUnitStatisticsBattleListFrames[i - iconFramesPerRow].wrapper.handle, FRAMEPOINT_BOTTOMLEFT, 0, -finalIconFrameVerticalSpaceBetween)
            else
                wrapperFrame:setRelativePoint(FRAMEPOINT_TOPLEFT, totalUnitStatisticsBattleListFrames[i - 1].wrapper.handle, FRAMEPOINT_TOPRIGHT, finalIconFrameHorizontalSpaceBetween, 0)
            end
            wrapperFrame:animateFadeIn(TOTAL_UNIT_STATISTICS_FADING_IN_DURATION, function()
                if i >= #battles then
                    onFinishCallback()
                end
            end)
        end)
    end
end

function HideStatisticsFrame(onFinishCallback)
    totalUnitStatisticsBackdropFrame.cover:animateFadeOut(0.5, function()
        for _, iconFrame in ipairs(totalUnitStatisticsBattleListFrames) do
            iconFrame.wrapper:setVisible(false):resetPoints()
        end
        onFinishCallback()
    end)
end

function ShowFinalRacesFrame(raceSummary)
    totalBattlesStatisticsBackdropFrame.cover:setAlpha(255):setVisible(true)
    local frameSpaceWidth = GetScreenFrameWidth() - TOTAL_BATTLES_STATISTICS_BACKDROP_PADDING_X * 2 - TOTAL_BATTLES_STATISTICS_WRAPPER_PADDING_X * 2
    local iconFramesPerRow = math.floor((frameSpaceWidth + TOTAL_BATTLES_STATISTICS_ICON_SPACE_X_MIN) / (TOTAL_BATTLES_STATISTICS_ICON_FRAME_WIDTH + TOTAL_BATTLES_STATISTICS_ICON_SPACE_X_MIN))
    local totalIconsWidth = iconFramesPerRow * TOTAL_BATTLES_STATISTICS_ICON_FRAME_WIDTH
    local finalIconFrameHorizontalSpaceBetween = (frameSpaceWidth - totalIconsWidth) / (iconFramesPerRow - 1)
    for i, race in ipairs(raceSummary) do
        local raceWrapperFrameHeight = TOTAL_BATTLES_STATISTICS_RACE_TEXT_HEIGHT
        local raceWrapperFrame
        local raceTextFrame
        local raceIcons
        if totalBattlesStatisticsBattleListFrames[i] == nil then
            raceWrapperFrame = SimpleEmptyFrame:new("TotalBattlesStatisticsRaceWrapper", totalBattlesStatisticsRacesWrapperFrame.handle, i)
            raceTextFrame = SimpleTextFrame:new("TotalBattlesStatisticsRaceText", "", TOTAL_BATTLES_STATISTICS_RACE_TEXT_SCALE, raceWrapperFrame.handle, i)
            raceTextFrame:setRelativePoint(FRAMEPOINT_TOPLEFT, raceWrapperFrame.handle, FRAMEPOINT_TOPLEFT, 0, 0)
            raceIcons = {}
            totalBattlesStatisticsBattleListFrames[i] = {
                wrapper = raceWrapperFrame,
                text = raceTextFrame,
                icons = raceIcons
            }
        else
            raceWrapperFrame = totalBattlesStatisticsBattleListFrames[i].wrapper
            raceTextFrame = totalBattlesStatisticsBattleListFrames[i].text
            raceIcons = totalBattlesStatisticsBattleListFrames[i].icons
        end
        raceTextFrame:setText("|cffffcc00" .. race.race .. "|r")
        if i == 1 then
            raceWrapperFrame
                :setRelativePoint(FRAMEPOINT_TOPLEFT, totalBattlesStatisticsRacesWrapperFrame.handle, FRAMEPOINT_TOPLEFT, 0, 0)
                :setRelativePoint(FRAMEPOINT_TOPRIGHT, totalBattlesStatisticsRacesWrapperFrame.handle, FRAMEPOINT_TOPRIGHT, 0, 0)
        else
            raceWrapperFrame
                :setRelativePoint(FRAMEPOINT_TOPLEFT, totalBattlesStatisticsBattleListFrames[i - 1].wrapper.handle, FRAMEPOINT_BOTTOMLEFT, 0, -TOTAL_BATTLES_STATISTICS_RACE_WRAPPER_SPACE_Y)
                :setRelativePoint(FRAMEPOINT_TOPRIGHT, totalBattlesStatisticsBattleListFrames[i - 1].wrapper.handle, FRAMEPOINT_BOTTOMRIGHT, 0, -TOTAL_BATTLES_STATISTICS_RACE_WRAPPER_SPACE_Y)
        end
        for j, unit in ipairs(race.units) do
            local wrapperFrame
            local iconFrame
            local textFrame
            if raceIcons[j] == nil then
                wrapperFrame = SimpleEmptyFrame:new("TotalBattlesStatisticsEntryWrapper", raceWrapperFrame.handle, j)
                iconFrame = TextureFrame:new("TotalBattlesStatisticsEntryIcon", "", wrapperFrame.handle, j)
                textFrame = SimpleTextFrame:new("TotalBattlesStatisticsEntryText", "", TOTAL_BATTLES_STATISTICS_ICON_TEXT_BASE_SCALE * (TOTAL_BATTLES_STATISTICS_ICON_FRAME_HEIGHT / 0.06), wrapperFrame.handle, j)
                wrapperFrame
                    :setSize(TOTAL_BATTLES_STATISTICS_ICON_FRAME_WIDTH, TOTAL_BATTLES_STATISTICS_ICON_FRAME_HEIGHT)
                iconFrame.cover
                    :setSize(TOTAL_BATTLES_STATISTICS_ICON_FRAME_HEIGHT, TOTAL_BATTLES_STATISTICS_ICON_FRAME_HEIGHT)
                    :setRelativePoint(FRAMEPOINT_TOPLEFT, wrapperFrame.handle, FRAMEPOINT_TOPLEFT, 0, 0)
                    :setRelativePoint(FRAMEPOINT_BOTTOMLEFT, wrapperFrame.handle, FRAMEPOINT_BOTTOMLEFT, 0, 0)
                textFrame
                    :setRelativePoint(FRAMEPOINT_TOPLEFT, iconFrame.cover.handle, FRAMEPOINT_TOPRIGHT, 0.002, 0)
                    :setRelativePoint(FRAMEPOINT_BOTTOMLEFT, iconFrame.cover.handle, FRAMEPOINT_BOTTOMLEFT, 0.002, 0)
                    :setRelativePoint(FRAMEPOINT_TOPRIGHT, wrapperFrame.handle, FRAMEPOINT_TOPRIGHT, 0, 0)
                    :setRelativePoint(FRAMEPOINT_BOTTOMRIGHT, wrapperFrame.handle, FRAMEPOINT_BOTTOMRIGHT, 0, 0)
                    :setAlignment(TEXT_JUSTIFY_MIDDLE, TEXT_JUSTIFY_CENTER)
                raceIcons[j] = {
                    wrapper = wrapperFrame,
                    icon = iconFrame,
                    text = textFrame
                }
            else
                wrapperFrame = raceIcons[j].wrapper
                iconFrame = raceIcons[j].icon
                textFrame = raceIcons[j].text
            end
            iconFrame:setTexture(unit.icon)
            local victoryPercentage = 0
            if unit.battles > 0 then
                victoryPercentage = unit.victories / unit.battles * 100
            end
            textFrame:setText(unit.name .. "\n" .. "Побед: " .. unit.victories .. "/" .. unit.battles .. " (" .. string.format("%.2f", victoryPercentage) .. "%)")
            if j == 1 then
                wrapperFrame:setRelativePoint(FRAMEPOINT_TOPLEFT, raceTextFrame.handle, FRAMEPOINT_BOTTOMLEFT, 0, -TOTAL_BATTLES_STATISTICS_RACE_TEXT_MARGIN_BOTTOM)
                raceWrapperFrameHeight = raceWrapperFrameHeight + TOTAL_BATTLES_STATISTICS_ICON_FRAME_HEIGHT + TOTAL_BATTLES_STATISTICS_RACE_TEXT_MARGIN_BOTTOM
            elseif (j - 1) % iconFramesPerRow == 0 then
                wrapperFrame:setRelativePoint(FRAMEPOINT_TOPLEFT, raceIcons[j - iconFramesPerRow].wrapper.handle, FRAMEPOINT_BOTTOMLEFT, 0, -TOTAL_UNIT_STATISTICS_ICON_SPACE_Y_MIN)
                raceWrapperFrameHeight = raceWrapperFrameHeight + TOTAL_BATTLES_STATISTICS_ICON_FRAME_HEIGHT + TOTAL_UNIT_STATISTICS_ICON_SPACE_Y_MIN
            else
                wrapperFrame:setRelativePoint(FRAMEPOINT_TOPLEFT, raceIcons[j - 1].wrapper.handle, FRAMEPOINT_TOPRIGHT, finalIconFrameHorizontalSpaceBetween, 0)
            end
        end
        raceWrapperFrame:setSize(0, raceWrapperFrameHeight)
    end
    totalBattlesStatisticsRacesWrapperFrame:animateFadeIn(1.5)
end

function showFinalTopsFrame(topUnits, worstUnits, topHeroes, worstHeroes)

end