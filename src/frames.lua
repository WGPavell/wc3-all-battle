---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by WGPavell.
--- DateTime: 24.03.2025 18:58
---

FRAMES_TO_HIDE = {'ConsoleBottomBarOverlay', 'CommandBarFrame'}
for i = 0, 11 do
    table.insert(FRAMES_TO_HIDE, "CommandButton_" .. i)
end

FULLSCREEN_CANVAS_SIZE_REFRESH_PERIOD = 0.02
--- @type SimpleEmptyFrame
fullscreenWrapperFrame = nil
--- @type SimpleEmptyFrame
fullscreenCanvasFrame = nil
fullscreenCanvasTimer = CreateTimer()

function GetScreenFrameWidth()
    return BlzGetLocalClientWidth() / BlzGetLocalClientHeight() * 0.6
end

function UpdateFullscreenCanvasSize()
    BlzFrameSetSize(fullscreenCanvasFrame.handle, GetScreenFrameWidth(), 0.6)
end

--- @type TextureFrame
leftSideIconFrame = nil
--- @type SimpleTextFrame
leftSideTextFrame = nil
--- @type SimpleTextFrame
leftSideStatisticsTextFrame = nil
--- @type TextureFrame
rightSideIconFrame = nil
--- @type SimpleTextFrame
rightSideTextFrame = nil
--- @type SimpleTextFrame
rightSideStatisticsTextFrame = nil
--- @type SimpleEmptyFrame
battleInfoWrapperFrame = nil
--- @type SimpleTextFrame
battleInfoLeftSideTitleFrame = nil
--- @type SimpleTextFrame
battleInfoRightSideTitleFrame = nil
--- @type SimpleTextFrame
battleInfoVersusLabelFrame = nil
--- @type TemplateBackdropFrame
battleWinnerBackdropFrame = nil
--- @type SimpleTextFrame
battleWinnerTextFrame = nil

OnInit.map(function()
    -- Hide all unnecessary frames
    BlzHideOriginFrames(true)
    local framesToHide = {}
    for _, frameName in ipairs(FRAMES_TO_HIDE) do
        table.insert(framesToHide, BlzGetFrameByName(frameName, 0))
    end
    for _, frame in ipairs(framesToHide) do
        BlzFrameSetVisible(frame, false)
    end

    -- Creating fullscreen frame
    local mainFrame = BlzGetFrameByName("ConsoleUIBackdrop", 0)
    fullscreenWrapperFrame = SimpleEmptyFrame:new("FullscreenWrapper", mainFrame)
    fullscreenCanvasFrame = SimpleEmptyFrame:new("FullscreenCanvas", fullscreenWrapperFrame.handle)
    BlzFrameSetVisible(fullscreenCanvasFrame.handle, false)
    UpdateFullscreenCanvasSize()
    TimerStart(fullscreenCanvasTimer, FULLSCREEN_CANVAS_SIZE_REFRESH_PERIOD, true, UpdateFullscreenCanvasSize)
    BlzFrameSetAbsPoint(fullscreenCanvasFrame.handle, FRAMEPOINT_BOTTOM, 0.4, 0)

    leftSideIconFrame = TextureFrame:new("LeftSideIcon", "", fullscreenWrapperFrame.handle)
    leftSideIconFrame.cover:setSize(0.045, 0.045):setRelativePoint(FRAMEPOINT_TOPLEFT, fullscreenCanvasFrame.handle, FRAMEPOINT_TOPLEFT, 0.03, -0.03)
    leftSideTextFrame = SimpleTextFrame:new("LeftSideText", "0", 2, fullscreenWrapperFrame.handle)
    leftSideTextFrame:setRelativePoint(FRAMEPOINT_LEFT, leftSideIconFrame.cover.handle, FRAMEPOINT_RIGHT, 0.003, 0)
    leftSideStatisticsTextFrame = SimpleTextFrame:new("LeftSideStatisticsText", "Всего убито: 0|nВсего умерло: 0", 1.25, fullscreenWrapperFrame.handle)
    leftSideStatisticsTextFrame:setRelativePoint(FRAMEPOINT_LEFT, leftSideTextFrame.handle, FRAMEPOINT_RIGHT, 0.01, 0):setRelativePoint(FRAMEPOINT_TOP, leftSideIconFrame.cover.handle, FRAMEPOINT_TOP, 0, 0):setAlignment(TEXT_JUSTIFY_TOP, TEXT_JUSTIFY_LEFT)

    rightSideIconFrame = TextureFrame:new("RightSideIcon", "", fullscreenWrapperFrame.handle)
    rightSideIconFrame.cover:setSize(0.045, 0.045):setRelativePoint(FRAMEPOINT_TOPRIGHT, fullscreenCanvasFrame.handle, FRAMEPOINT_TOPRIGHT, -0.03, -0.03)
    rightSideTextFrame = SimpleTextFrame:new("RightSideText", "0", 2, fullscreenWrapperFrame.handle)
    rightSideTextFrame:setRelativePoint(FRAMEPOINT_RIGHT, rightSideIconFrame.cover.handle, FRAMEPOINT_LEFT, -0.003, 0)
    rightSideStatisticsTextFrame = SimpleTextFrame:new("RightSideStatisticsText", "Всего убито: 0|nВсего умерло: 0", 1.25, fullscreenWrapperFrame.handle)
    rightSideStatisticsTextFrame:setRelativePoint(FRAMEPOINT_RIGHT, rightSideTextFrame.handle, FRAMEPOINT_LEFT, -0.01, 0):setRelativePoint(FRAMEPOINT_TOP, rightSideIconFrame.cover.handle, FRAMEPOINT_TOP, 0, 0):setAlignment(TEXT_JUSTIFY_TOP, TEXT_JUSTIFY_RIGHT)

    battleInfoWrapperFrame = SimpleTypeFrame:new("BattleInfoWrapper", "SPRITE", fullscreenWrapperFrame.handle, "", 0)
    battleInfoWrapperFrame:setSize(0.3, 0):setRelativePoint(FRAMEPOINT_TOP, fullscreenCanvasFrame.handle, FRAMEPOINT_TOP, 0, 0):setRelativePoint(FRAMEPOINT_BOTTOM, fullscreenCanvasFrame.handle, FRAMEPOINT_BOTTOM, 0, 0)
    battleInfoLeftSideTitleFrame = SimpleTextFrame:new("BattleInfoLeftSideTitle", "", 3, battleInfoWrapperFrame.handle)
    battleInfoLeftSideTitleFrame:setRelativePoint(FRAMEPOINT_TOP, battleInfoWrapperFrame.handle, FRAMEPOINT_TOP, 0, -0.006)
    battleInfoVersusLabelFrame = SimpleTextFrame:new("BattleInfoVersusLabel", "против", 2.6, battleInfoWrapperFrame.handle)
    battleInfoVersusLabelFrame:setRelativePoint(FRAMEPOINT_TOP, battleInfoLeftSideTitleFrame.handle, FRAMEPOINT_BOTTOM, 0, -0.004)
    battleInfoRightSideTitleFrame = SimpleTextFrame:new("BattleInfoRightSideTitle", "", 3, battleInfoWrapperFrame.handle)
    battleInfoRightSideTitleFrame:setRelativePoint(FRAMEPOINT_TOP, battleInfoVersusLabelFrame.handle, FRAMEPOINT_BOTTOM, 0, -0.004)
    battleInfoWrapperFrame:setVisible(false)

    battleWinnerBackdropFrame = TemplateBackdropFrame:new("BattleWinnerBackdrop", "QuestButtonBaseTemplate", fullscreenWrapperFrame.handle)
    battleWinnerTextFrame = SimpleTextFrame:new("BattleWinnerText", "|cffffcc00ПОБЕДИТЕЛЬ|r\n\nОХОТНИК НА ДЕМОНОВ", 4, battleWinnerBackdropFrame.cover.handle)
    battleWinnerTextFrame:setAlignment(TEXT_JUSTIFY_MIDDLE, TEXT_JUSTIFY_CENTER)
    battleWinnerBackdropFrame.cover:setAbsPoint(FRAMEPOINT_CENTER, 0.4, 0.3):setSize(0.4, 0):setVisible(false)
    battleWinnerTextFrame
        :setRelativePoint(FRAMEPOINT_TOP, battleWinnerBackdropFrame.cover.handle, FRAMEPOINT_TOP, 0, -0.1)
        :setRelativePoint(FRAMEPOINT_BOTTOM, battleWinnerBackdropFrame.cover.handle, FRAMEPOINT_BOTTOM, 0, 0.1)
        :setRelativePoint(FRAMEPOINT_LEFT, battleWinnerBackdropFrame.cover.handle, FRAMEPOINT_LEFT, 0.005, 0)
        :setRelativePoint(FRAMEPOINT_RIGHT, battleWinnerBackdropFrame.cover.handle, FRAMEPOINT_RIGHT, -0.005, 0)
        :setVisible(false)

    local totalUnitStatisticsBackdropFrame = TemplateBackdropFrame:new("TotalUnitStatisticsBackdrop", "EscMenuBackdrop", fullscreenWrapperFrame.handle)
    totalUnitStatisticsBackdropFrame.cover
        :setRelativePoint(FRAMEPOINT_BOTTOMLEFT, fullscreenCanvasFrame.handle, FRAMEPOINT_BOTTOMLEFT, 0.05, 0.05)
        :setRelativePoint(FRAMEPOINT_BOTTOMRIGHT, fullscreenCanvasFrame.handle, FRAMEPOINT_BOTTOMRIGHT, -0.05, 0.05)
        :setSize(0, 0.4)
    local totalUnitStatisticsWrapperFrame = SimpleEmptyFrame:new("TotalUnitStatisticsWrapper", totalUnitStatisticsBackdropFrame.cover.handle)
    totalUnitStatisticsWrapperFrame
        :setRelativePoint(FRAMEPOINT_TOPLEFT, totalUnitStatisticsBackdropFrame.cover.handle, FRAMEPOINT_TOPLEFT, 0.025, -0.025)
        :setRelativePoint(FRAMEPOINT_TOPRIGHT, totalUnitStatisticsBackdropFrame.cover.handle, FRAMEPOINT_TOPRIGHT, -0.025, -0.025)
        :setRelativePoint(FRAMEPOINT_BOTTOM, totalUnitStatisticsBackdropFrame.cover.handle, FRAMEPOINT_BOTTOM, 0, 0.025)
    --debugPrintAny(BlzFrameGetWidth(totalUnitStatisticsBackdropFrame.cover.handle))
    --local prevFrame
    local frameSpaceWidth = GetScreenFrameWidth() - 0.05 * 2 - 0.025 * 2
    local frameSpaceHeight = 0.4 - 0.025 * 2
    local iconFrameWidth = 0.2
    local iconFrameHeight = 0.06
    local iconFrameHorizontalSpaceBetween = 0.01
    local iconFrameVerticalSpaceBetween = 0.0075
    local iconFramesPerRow = math.floor((frameSpaceWidth + iconFrameHorizontalSpaceBetween) / (iconFrameWidth + iconFrameHorizontalSpaceBetween))
    local iconFramesPerCol = math.floor((frameSpaceHeight + iconFrameVerticalSpaceBetween) / (iconFrameHeight + iconFrameVerticalSpaceBetween))
    local totalIconsWidth = iconFramesPerRow * iconFrameWidth
    local totalIconsHeight = iconFramesPerCol * iconFrameHeight
    local finalIconFrameHorizontalSpaceBetween = (frameSpaceWidth - totalIconsWidth) / (iconFramesPerRow - 1)
    local finalIconFrameVerticalSpaceBetween = (frameSpaceHeight - totalIconsHeight) / (iconFramesPerCol - 1)
    local iconFrames = {}
    for i = 1, 100 do
        --if (i - 1) / iconFramesPerRow > iconFramesPerCol - 1 then
        --    break
        --end
        DelayCallback(0.1 * i, function()
            local newWrapperFrame = SimpleEmptyFrame:new("TotalUnitStatisticsEntryWrapper", totalUnitStatisticsBackdropFrame.cover.handle, i)
            local newIconFrame = TextureFrame:new("TotalUnitStatisticsEntryIcon", BlzGetAbilityIcon(FourCC('hpea')), newWrapperFrame.handle, i)
            local newTextFrame = SimpleTextFrame:new("TotalUnitStatisticsEntryText", "Поражение", 2.25 * (iconFrameHeight / 0.06), newWrapperFrame.handle, i)
            BlzFrameSetTextColor(newTextFrame.handle, BlzConvertColor(255, 255, 0, 0))
            newWrapperFrame
                :setSize(iconFrameWidth, iconFrameHeight)
            newIconFrame.cover
                :setSize(iconFrameHeight, iconFrameHeight)
                :setRelativePoint(FRAMEPOINT_TOPLEFT, newWrapperFrame.handle, FRAMEPOINT_TOPLEFT, 0, 0)
                :setRelativePoint(FRAMEPOINT_BOTTOMLEFT, newWrapperFrame.handle, FRAMEPOINT_BOTTOMLEFT, 0, 0)
            newTextFrame
                :setRelativePoint(FRAMEPOINT_TOPLEFT, newIconFrame.cover.handle, FRAMEPOINT_TOPRIGHT, 0.003, 0)
                :setRelativePoint(FRAMEPOINT_BOTTOMLEFT, newIconFrame.cover.handle, FRAMEPOINT_BOTTOMLEFT, 0.003, 0)
                :setRelativePoint(FRAMEPOINT_TOPRIGHT, newWrapperFrame.handle, FRAMEPOINT_TOPRIGHT, 0, 0)
                :setRelativePoint(FRAMEPOINT_BOTTOMRIGHT, newWrapperFrame.handle, FRAMEPOINT_BOTTOMRIGHT, 0, 0)
                :setAlignment(TEXT_JUSTIFY_MIDDLE, TEXT_JUSTIFY_CENTER)
            if i == 1 then
                newWrapperFrame:setRelativePoint(FRAMEPOINT_TOPLEFT, totalUnitStatisticsWrapperFrame.handle, FRAMEPOINT_TOPLEFT, 0, 0)
            elseif (i - 1) % iconFramesPerRow == 0 then
                if (i - 1) / iconFramesPerRow > iconFramesPerCol - 1 then
                    for j = i - (iconFramesPerRow * iconFramesPerCol), i - (iconFramesPerRow * iconFramesPerCol) + iconFramesPerRow - 1 do
                        iconFrames[j].wrapper:setVisible(false):resetPoints()
                    end
                    debugPrint(i - (iconFramesPerRow * iconFramesPerCol) + iconFramesPerRow)
                    iconFramesPerRow[i - (iconFramesPerRow * iconFramesPerCol) + iconFramesPerRow].wrapper:setRelativePoint(FRAMEPOINT_TOPLEFT, totalUnitStatisticsWrapperFrame.handle, FRAMEPOINT_TOPLEFT, 0, 0)
                end
                newWrapperFrame:setRelativePoint(FRAMEPOINT_TOPLEFT, iconFrames[i - iconFramesPerRow].wrapper.handle, FRAMEPOINT_BOTTOMLEFT, 0, -finalIconFrameVerticalSpaceBetween)
            else
                newWrapperFrame:setRelativePoint(FRAMEPOINT_TOPLEFT, iconFrames[i - 1].wrapper.handle, FRAMEPOINT_TOPRIGHT, finalIconFrameHorizontalSpaceBetween, 0)
            end
            newWrapperFrame:animateFadeIn(0.4)
            iconFrames[i] = {
                wrapper = newWrapperFrame,
                icon = newIconFrame,
                text = newTextFrame
            }
        end)
    end

    BlzFrameClearAllPoints(mainFrame)
end)

SIDE_FRAME_LEFT = 1
SIDE_FRAME_RIGHT = 2

upgradeFrames = {
    [SIDE_FRAME_LEFT] = {
        visible_total = 0,
        frames = {}
    },
    [SIDE_FRAME_RIGHT] = {
        visible_total = 0,
        frames = {}
    }
}

function ClearUpgradeFrames()
    for _, sideUpgradeFrames in ipairs(upgradeFrames) do
        ---@param upgradeFrame SimpleTypeFrame
        for _, upgradeFrame in ipairs(sideUpgradeFrames.frames) do
            upgradeFrame:setVisible(false)
        end
        sideUpgradeFrames.visible_total = 0
    end
end

function AppendUpgradeFrame(side)
    local frameIndex = upgradeFrames[side].visible_total + 1
    ---@type UpgradeDataFrame
    local upgradeFrame = upgradeFrames[side].frames[frameIndex]
    if (upgradeFrame == nil) then
        upgradeFrame = UpgradeDataFrame:new("UpgradeFrameContainer", "", "0", 1.25, side == SIDE_FRAME_LEFT and UPGRADE_DATA_FRAME_TEXT_ALIGNMENT_RIGHT or UPGRADE_DATA_FRAME_TEXT_ALIGNMENT_LEFT, fullscreenWrapperFrame.handle, frameIndex - 1)
        upgradeFrame:setSize(0.034, 0.0225)
        upgradeFrames[side].frames[frameIndex] = upgradeFrame
        if frameIndex == 1 then
            upgradeFrame.cover:setRelativePoint(side == SIDE_FRAME_LEFT and FRAMEPOINT_TOPLEFT or FRAMEPOINT_TOPRIGHT, side == SIDE_FRAME_LEFT and leftSideIconFrame.cover.handle or rightSideIconFrame.cover.handle, side == SIDE_FRAME_LEFT and FRAMEPOINT_BOTTOMLEFT or FRAMEPOINT_BOTTOMRIGHT, 0, -0.015)
        elseif (frameIndex - 1) % 4 == 0 then
            upgradeFrame.cover:setRelativePoint(side == SIDE_FRAME_LEFT and FRAMEPOINT_TOPLEFT or FRAMEPOINT_TOPRIGHT, upgradeFrames[side].frames[frameIndex - 4].cover.handle, side == SIDE_FRAME_LEFT and FRAMEPOINT_BOTTOMLEFT or FRAMEPOINT_BOTTOMRIGHT, 0, -0.003)
        else
            upgradeFrame.cover:setRelativePoint(side == SIDE_FRAME_LEFT and FRAMEPOINT_LEFT or FRAMEPOINT_RIGHT, upgradeFrames[side].frames[frameIndex - 1].cover.handle, side == SIDE_FRAME_LEFT and FRAMEPOINT_RIGHT or FRAMEPOINT_LEFT, side == SIDE_FRAME_LEFT and 0.001 or -0.001, 0)
        end
    else
        upgradeFrame:setVisible(true)
    end
    upgradeFrames[side].visible_total = frameIndex
end